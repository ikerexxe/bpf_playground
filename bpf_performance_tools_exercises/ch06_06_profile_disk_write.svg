<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>copy_page_to_iter (10 samples, 1.43%)</title><rect x="499.6" y="133" width="16.8" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="502.56" y="143.5" ></text>
</g>
<g >
<title>fsnotify (10 samples, 1.43%)</title><rect x="197.4" y="165" width="16.9" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="200.38" y="175.5" ></text>
</g>
<g >
<title>pipe_read (236 samples, 33.76%)</title><rect x="226.1" y="165" width="398.4" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="229.08" y="175.5" >pipe_read</text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.43%)</title><rect x="557.0" y="133" width="5.0" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="559.95" y="143.5" ></text>
</g>
<g >
<title>- (2 samples, 0.29%)</title><rect x="1174.8" y="245" width="3.4" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1177.81" y="255.5" ></text>
</g>
<g >
<title>scsi_queue_rq (1 samples, 0.14%)</title><rect x="1179.9" y="133" width="1.7" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1182.87" y="143.5" ></text>
</g>
<g >
<title>mutex_lock (11 samples, 1.57%)</title><rect x="538.4" y="133" width="18.6" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="541.38" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.14%)</title><rect x="173.7" y="197" width="1.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="176.75" y="207.5" ></text>
</g>
<g >
<title>pipe_write (2 samples, 0.29%)</title><rect x="849.0" y="149" width="3.4" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="852.00" y="159.5" ></text>
</g>
<g >
<title>___sys_recvmsg (1 samples, 0.14%)</title><rect x="1178.2" y="197" width="1.7" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1181.18" y="207.5" ></text>
</g>
<g >
<title>security_file_permission (14 samples, 2.00%)</title><rect x="678.5" y="165" width="23.6" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="681.50" y="175.5" >s..</text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.14%)</title><rect x="491.1" y="149" width="1.7" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text  x="494.12" y="159.5" ></text>
</g>
<g >
<title>kworker/0:1H (2 samples, 0.29%)</title><rect x="1179.9" y="293" width="3.3" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text  x="1182.87" y="303.5" ></text>
</g>
<g >
<title>__mutex_lock.constprop.0 (1 samples, 0.14%)</title><rect x="226.1" y="149" width="1.7" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="229.08" y="159.5" ></text>
</g>
<g >
<title>fsnotify (5 samples, 0.72%)</title><rect x="670.1" y="165" width="8.4" height="15.0" fill="rgb(199,99,0)" rx="2" ry="2" />
<text  x="673.06" y="175.5" ></text>
</g>
<g >
<title>new_sync_write (2 samples, 0.29%)</title><rect x="1174.8" y="165" width="3.4" height="15.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="1177.81" y="175.5" ></text>
</g>
<g >
<title>pipe_read (18 samples, 2.58%)</title><rect x="562.0" y="149" width="30.4" height="15.0" fill="rgb(201,101,0)" rx="2" ry="2" />
<text  x="565.02" y="159.5" >pi..</text>
</g>
<g >
<title>vfs_write (15 samples, 2.15%)</title><rect x="1016.1" y="181" width="25.3" height="15.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="1019.12" y="191.5" >v..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.29%)</title><rect x="1174.8" y="213" width="3.4" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="1177.81" y="223.5" ></text>
</g>
<g >
<title>virtscsi_add_cmd (1 samples, 0.14%)</title><rect x="1179.9" y="101" width="1.7" height="15.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="1182.87" y="111.5" ></text>
</g>
<g >
<title>new_sync_read (7 samples, 1.00%)</title><rect x="214.3" y="165" width="11.8" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="217.26" y="175.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (6 samples, 0.86%)</title><rect x="524.9" y="117" width="10.1" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="527.88" y="127.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (2 samples, 0.29%)</title><rect x="626.2" y="149" width="3.3" height="15.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="629.17" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.43%)</title><rect x="236.2" y="117" width="5.1" height="15.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="239.21" y="127.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.14%)</title><rect x="702.1" y="117" width="1.7" height="15.0" fill="rgb(190,90,0)" rx="2" ry="2" />
<text  x="705.13" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (578 samples, 82.69%)</title><rect x="173.7" y="245" width="975.8" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="176.75" y="255.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>avtab_search_node (1 samples, 0.14%)</title><rect x="1178.2" y="53" width="1.7" height="15.0" fill="rgb(209,109,0)" rx="2" ry="2" />
<text  x="1181.18" y="63.5" ></text>
</g>
<g >
<title>kill_fasync (1 samples, 0.14%)</title><rect x="535.0" y="133" width="1.7" height="15.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text  x="538.01" y="143.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1 samples, 0.14%)</title><rect x="1186.6" y="277" width="1.7" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="1189.62" y="287.5" ></text>
</g>
<g >
<title>avtab_search_node (1 samples, 0.14%)</title><rect x="1178.2" y="37" width="1.7" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="1181.18" y="47.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.29%)</title><rect x="1174.8" y="261" width="3.4" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1177.81" y="271.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1181.6" y="229" width="1.6" height="15.0" fill="rgb(212,112,0)" rx="2" ry="2" />
<text  x="1184.56" y="239.5" ></text>
</g>
<g >
<title>ksys_write (7 samples, 1.00%)</title><rect x="768.0" y="197" width="11.8" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="770.97" y="207.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (49 samples, 7.01%)</title><rect x="891.2" y="117" width="82.7" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="894.20" y="127.5" >finish_ta..</text>
</g>
<g >
<title>__fdget_pos (6 samples, 0.86%)</title><rect x="177.1" y="197" width="10.2" height="15.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="180.12" y="207.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (4 samples, 0.57%)</title><rect x="977.3" y="165" width="6.7" height="15.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="980.30" y="175.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1179.9" y="229" width="1.7" height="15.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="1182.87" y="239.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.14%)</title><rect x="1178.2" y="165" width="1.7" height="15.0" fill="rgb(223,123,0)" rx="2" ry="2" />
<text  x="1181.18" y="175.5" ></text>
</g>
<g >
<title>avc_lookup (10 samples, 1.43%)</title><rect x="643.0" y="133" width="16.9" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="646.05" y="143.5" ></text>
</g>
<g >
<title>file_has_perm (4 samples, 0.57%)</title><rect x="659.9" y="149" width="6.8" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="662.93" y="159.5" ></text>
</g>
<g >
<title>dd (691 samples, 98.86%)</title><rect x="11.7" y="293" width="1166.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="14.69" y="303.5" >dd</text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="10.0" y="277" width="1.7" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (1 samples, 0.14%)</title><rect x="226.1" y="133" width="1.7" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="229.08" y="143.5" ></text>
</g>
<g >
<title>pipe_write (2 samples, 0.29%)</title><rect x="1174.8" y="149" width="3.4" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="1177.81" y="159.5" ></text>
</g>
<g >
<title>gnome-shell (1 samples, 0.14%)</title><rect x="1178.2" y="293" width="1.7" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="1181.18" y="303.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.14%)</title><rect x="624.5" y="181" width="1.7" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="627.48" y="191.5" ></text>
</g>
<g >
<title>ksys_write (175 samples, 25.04%)</title><rect x="746.0" y="213" width="295.4" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="749.02" y="223.5" >ksys_write</text>
</g>
<g >
<title>avc_has_perm (1 samples, 0.14%)</title><rect x="1178.2" y="117" width="1.7" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="1181.18" y="127.5" ></text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (1 samples, 0.14%)</title><rect x="1179.9" y="181" width="1.7" height="15.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="1182.87" y="191.5" ></text>
</g>
<g >
<title>schedule (53 samples, 7.58%)</title><rect x="886.1" y="149" width="89.5" height="15.0" fill="rgb(196,96,0)" rx="2" ry="2" />
<text  x="889.14" y="159.5" >schedule</text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="973.9" y="133" width="1.7" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="976.92" y="143.5" ></text>
</g>
<g >
<title>security_file_permission (8 samples, 1.14%)</title><rect x="984.0" y="165" width="13.6" height="15.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="987.05" y="175.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.72%)</title><rect x="178.8" y="181" width="8.5" height="15.0" fill="rgb(197,97,0)" rx="2" ry="2" />
<text  x="181.81" y="191.5" ></text>
</g>
<g >
<title>bash (1 samples, 0.14%)</title><rect x="10.0" y="293" width="1.7" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>__fdget_pos (13 samples, 1.86%)</title><rect x="746.0" y="197" width="22.0" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="749.02" y="207.5" >_..</text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.14%)</title><rect x="173.7" y="213" width="1.7" height="15.0" fill="rgb(204,104,0)" rx="2" ry="2" />
<text  x="176.75" y="223.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.14%)</title><rect x="1184.9" y="197" width="1.7" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="1187.94" y="207.5" ></text>
</g>
<g >
<title>__cond_resched (4 samples, 0.57%)</title><rect x="492.8" y="133" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="495.80" y="143.5" ></text>
</g>
<g >
<title>avc_compute_av.isra.0 (1 samples, 0.14%)</title><rect x="1178.2" y="101" width="1.7" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="1181.18" y="111.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.14%)</title><rect x="491.1" y="133" width="1.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="494.12" y="143.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (6 samples, 0.86%)</title><rect x="1139.4" y="197" width="10.1" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="1142.36" y="207.5" ></text>
</g>
<g >
<title>__sys_recvmsg (1 samples, 0.14%)</title><rect x="1178.2" y="213" width="1.7" height="15.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="1181.18" y="223.5" ></text>
</g>
<g >
<title>recvmsg (1 samples, 0.14%)</title><rect x="1178.2" y="277" width="1.7" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="1181.18" y="287.5" ></text>
</g>
<g >
<title>inode_security (3 samples, 0.43%)</title><rect x="702.1" y="149" width="5.1" height="15.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="705.13" y="159.5" ></text>
</g>
<g >
<title>avc_lookup (10 samples, 1.43%)</title><rect x="643.0" y="117" width="16.9" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="646.05" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.14%)</title><rect x="1178.2" y="245" width="1.7" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="1181.18" y="255.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5 samples, 0.72%)</title><rect x="516.4" y="117" width="8.5" height="15.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="519.44" y="127.5" ></text>
</g>
<g >
<title>__fsnotify_parent (40 samples, 5.72%)</title><rect x="779.8" y="181" width="67.5" height="15.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="782.79" y="191.5" >__fsnot..</text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1183.2" y="213" width="1.7" height="15.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="1186.25" y="223.5" ></text>
</g>
<g >
<title>selinux_file_permission (11 samples, 1.57%)</title><rect x="997.6" y="165" width="18.5" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="1000.55" y="175.5" ></text>
</g>
<g >
<title>inode_security (1 samples, 0.14%)</title><rect x="997.6" y="149" width="1.6" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="1000.55" y="159.5" ></text>
</g>
<g >
<title>current_time (5 samples, 0.72%)</title><rect x="602.5" y="117" width="8.5" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="605.53" y="127.5" ></text>
</g>
<g >
<title>kworker/1:1H (2 samples, 0.29%)</title><rect x="1183.2" y="293" width="3.4" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text  x="1186.25" y="303.5" ></text>
</g>
<g >
<title>virtscsi_queuecommand (1 samples, 0.14%)</title><rect x="1179.9" y="117" width="1.7" height="15.0" fill="rgb(235,135,0)" rx="2" ry="2" />
<text  x="1182.87" y="127.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.14%)</title><rect x="975.6" y="165" width="1.7" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="978.61" y="175.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (57 samples, 8.15%)</title><rect x="1041.4" y="213" width="96.3" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1044.44" y="223.5" >syscall_ent..</text>
</g>
<g >
<title>dput (6 samples, 0.86%)</title><rect x="828.7" y="165" width="10.2" height="15.0" fill="rgb(252,152,0)" rx="2" ry="2" />
<text  x="831.74" y="175.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (57 samples, 8.15%)</title><rect x="1041.4" y="197" width="96.3" height="15.0" fill="rgb(235,135,0)" rx="2" ry="2" />
<text  x="1044.44" y="207.5" >syscall_ent..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (2 samples, 0.29%)</title><rect x="1174.8" y="85" width="3.4" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="1177.81" y="95.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (5 samples, 0.72%)</title><rect x="516.4" y="133" width="8.5" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="519.44" y="143.5" ></text>
</g>
<g >
<title>__schedule (52 samples, 7.44%)</title><rect x="886.1" y="133" width="87.8" height="15.0" fill="rgb(213,113,0)" rx="2" ry="2" />
<text  x="889.14" y="143.5" >__schedule</text>
</g>
<g >
<title>make_kuid (1 samples, 0.14%)</title><rect x="614.3" y="117" width="1.7" height="15.0" fill="rgb(200,100,0)" rx="2" ry="2" />
<text  x="617.35" y="127.5" ></text>
</g>
<g >
<title>atime_needs_update (6 samples, 0.86%)</title><rect x="592.4" y="117" width="10.1" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="595.40" y="127.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.14%)</title><rect x="828.7" y="149" width="1.7" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="831.74" y="159.5" ></text>
</g>
<g >
<title>- (1 samples, 0.14%)</title><rect x="1178.2" y="261" width="1.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1181.18" y="271.5" ></text>
</g>
<g >
<title>vfs_write (2 samples, 0.29%)</title><rect x="1174.8" y="181" width="3.4" height="15.0" fill="rgb(254,154,0)" rx="2" ry="2" />
<text  x="1177.81" y="191.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.14%)</title><rect x="612.7" y="101" width="1.6" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="615.66" y="111.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.14%)</title><rect x="1181.6" y="197" width="1.6" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1184.56" y="207.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1184.9" y="213" width="1.7" height="15.0" fill="rgb(209,109,0)" rx="2" ry="2" />
<text  x="1187.94" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (148 samples, 21.17%)</title><rect x="241.3" y="133" width="249.8" height="15.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="244.27" y="143.5" >_raw_spin_unlock_irqrestore</text>
</g>
<g >
<title>____sys_recvmsg (1 samples, 0.14%)</title><rect x="1178.2" y="181" width="1.7" height="15.0" fill="rgb(196,96,0)" rx="2" ry="2" />
<text  x="1181.18" y="191.5" ></text>
</g>
<g >
<title>[unknown] (691 samples, 98.86%)</title><rect x="11.7" y="277" width="1166.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="14.69" y="287.5" >[unknown]</text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (3 samples, 0.43%)</title><rect x="605.9" y="85" width="5.1" height="15.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="608.91" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (148 samples, 21.17%)</title><rect x="241.3" y="117" width="249.8" height="15.0" fill="rgb(190,90,0)" rx="2" ry="2" />
<text  x="244.27" y="127.5" >_raw_spin_unlock_irqrestore</text>
</g>
<g >
<title>bpf_lsm_file_permission (4 samples, 0.57%)</title><rect x="977.3" y="149" width="6.7" height="15.0" fill="rgb(235,135,0)" rx="2" ry="2" />
<text  x="980.30" y="159.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.14%)</title><rect x="837.2" y="149" width="1.7" height="15.0" fill="rgb(209,109,0)" rx="2" ry="2" />
<text  x="840.18" y="159.5" ></text>
</g>
<g >
<title>avc_has_perm (8 samples, 1.14%)</title><rect x="629.5" y="133" width="13.5" height="15.0" fill="rgb(250,150,0)" rx="2" ry="2" />
<text  x="632.54" y="143.5" ></text>
</g>
<g >
<title>kill_fasync (1 samples, 0.14%)</title><rect x="535.0" y="149" width="1.7" height="15.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="538.01" y="159.5" ></text>
</g>
<g >
<title>atime_needs_update (14 samples, 2.00%)</title><rect x="592.4" y="133" width="23.6" height="15.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="595.40" y="143.5" >a..</text>
</g>
<g >
<title>prepare_to_wait_event (20 samples, 2.86%)</title><rect x="852.4" y="149" width="33.7" height="15.0" fill="rgb(204,104,0)" rx="2" ry="2" />
<text  x="855.37" y="159.5" >pr..</text>
</g>
<g >
<title>vfs_write (155 samples, 22.17%)</title><rect x="779.8" y="197" width="261.6" height="15.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="782.79" y="207.5" >vfs_write</text>
</g>
<g >
<title>[Missed Kernel Stack] (15 samples, 2.15%)</title><rect x="1149.5" y="261" width="25.3" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="1152.48" y="271.5" >[..</text>
</g>
<g >
<title>__schedule (3 samples, 0.43%)</title><rect x="886.1" y="117" width="5.1" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="889.14" y="127.5" ></text>
</g>
<g >
<title>inode_has_perm (2 samples, 0.29%)</title><rect x="666.7" y="149" width="3.4" height="15.0" fill="rgb(190,90,0)" rx="2" ry="2" />
<text  x="669.68" y="159.5" ></text>
</g>
<g >
<title>selinux_socket_recvmsg (1 samples, 0.14%)</title><rect x="1178.2" y="133" width="1.7" height="15.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="1181.18" y="143.5" ></text>
</g>
<g >
<title>vfs_read (325 samples, 46.49%)</title><rect x="197.4" y="197" width="548.6" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="200.38" y="207.5" >vfs_read</text>
</g>
<g >
<title>__fget_light (10 samples, 1.43%)</title><rect x="751.1" y="181" width="16.9" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="754.09" y="191.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (156 samples, 22.32%)</title><rect x="227.8" y="149" width="263.3" height="15.0" fill="rgb(197,97,0)" rx="2" ry="2" />
<text  x="230.77" y="159.5" >__wake_up_common_lock</text>
</g>
<g >
<title>mutex_lock (12 samples, 1.72%)</title><rect x="536.7" y="149" width="20.3" height="15.0" fill="rgb(214,114,0)" rx="2" ry="2" />
<text  x="539.70" y="159.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (12 samples, 1.72%)</title><rect x="808.5" y="149" width="20.2" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="811.48" y="159.5" ></text>
</g>
<g >
<title>- (578 samples, 82.69%)</title><rect x="173.7" y="261" width="975.8" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="176.75" y="271.5" >-</text>
</g>
<g >
<title>iowrite16 (1 samples, 0.14%)</title><rect x="1179.9" y="37" width="1.7" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="1182.87" y="47.5" ></text>
</g>
<g >
<title>current_time (2 samples, 0.29%)</title><rect x="602.5" y="101" width="3.4" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="605.53" y="111.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.29%)</title><rect x="1174.8" y="117" width="3.4" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="1177.81" y="127.5" ></text>
</g>
<g >
<title>inode_security (2 samples, 0.29%)</title><rect x="703.8" y="133" width="3.4" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="706.82" y="143.5" ></text>
</g>
<g >
<title>iowrite16 (1 samples, 0.14%)</title><rect x="1179.9" y="53" width="1.7" height="15.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="1182.87" y="63.5" ></text>
</g>
<g >
<title>copy_page_to_iter (25 samples, 3.58%)</title><rect x="492.8" y="149" width="42.2" height="15.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="495.80" y="159.5" >cop..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.14%)</title><rect x="1137.7" y="197" width="1.7" height="15.0" fill="rgb(209,109,0)" rx="2" ry="2" />
<text  x="1140.67" y="207.5" ></text>
</g>
<g >
<title>__fsnotify_parent (14 samples, 2.00%)</title><rect x="779.8" y="165" width="23.6" height="15.0" fill="rgb(206,106,0)" rx="2" ry="2" />
<text  x="782.79" y="175.5" >_..</text>
</g>
<g >
<title>schedule (2 samples, 0.29%)</title><rect x="1174.8" y="133" width="3.4" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="1177.81" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (3 samples, 0.43%)</title><rect x="236.2" y="133" width="5.1" height="15.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="239.21" y="143.5" ></text>
</g>
<g >
<title>__fget_light (10 samples, 1.43%)</title><rect x="751.1" y="165" width="16.9" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="754.09" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.29%)</title><rect x="1174.8" y="229" width="3.4" height="15.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text  x="1177.81" y="239.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (49 samples, 7.01%)</title><rect x="891.2" y="101" width="82.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="894.20" y="111.5" >finish_ta..</text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.14%)</title><rect x="614.3" y="101" width="1.7" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="617.35" y="111.5" ></text>
</g>
<g >
<title>kthread (2 samples, 0.29%)</title><rect x="1179.9" y="261" width="3.3" height="15.0" fill="rgb(199,99,0)" rx="2" ry="2" />
<text  x="1182.87" y="271.5" ></text>
</g>
<g >
<title>inode_has_perm (2 samples, 0.29%)</title><rect x="666.7" y="133" width="3.4" height="15.0" fill="rgb(205,105,0)" rx="2" ry="2" />
<text  x="669.68" y="143.5" ></text>
</g>
<g >
<title>dget_parent (3 samples, 0.43%)</title><rect x="803.4" y="149" width="5.1" height="15.0" fill="rgb(217,117,0)" rx="2" ry="2" />
<text  x="806.42" y="159.5" ></text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.29%)</title><rect x="1179.9" y="277" width="3.3" height="15.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="1182.87" y="287.5" ></text>
</g>
<g >
<title>touch_atime (19 samples, 2.72%)</title><rect x="592.4" y="149" width="32.1" height="15.0" fill="rgb(202,102,0)" rx="2" ry="2" />
<text  x="595.40" y="159.5" >to..</text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.14%)</title><rect x="975.6" y="181" width="1.7" height="15.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text  x="978.61" y="191.5" ></text>
</g>
<g >
<title>pipe_write (76 samples, 10.87%)</title><rect x="847.3" y="165" width="128.3" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="850.31" y="175.5" >pipe_write</text>
</g>
<g >
<title>ret_from_fork (2 samples, 0.29%)</title><rect x="1183.2" y="277" width="3.4" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="1186.25" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (18 samples, 2.58%)</title><rect x="852.4" y="117" width="30.4" height="15.0" fill="rgb(247,147,0)" rx="2" ry="2" />
<text  x="855.37" y="127.5" >_r..</text>
</g>
<g >
<title>fsnotify (5 samples, 0.72%)</title><rect x="670.1" y="149" width="8.4" height="15.0" fill="rgb(222,122,0)" rx="2" ry="2" />
<text  x="673.06" y="159.5" ></text>
</g>
<g >
<title>selinux_file_permission (10 samples, 1.43%)</title><rect x="999.2" y="149" width="16.9" height="15.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="1002.24" y="159.5" ></text>
</g>
<g >
<title>file_has_perm (24 samples, 3.43%)</title><rect x="629.5" y="165" width="40.6" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="632.54" y="175.5" >fil..</text>
</g>
<g >
<title>__cond_resched (1 samples, 0.14%)</title><rect x="828.7" y="133" width="1.7" height="15.0" fill="rgb(199,99,0)" rx="2" ry="2" />
<text  x="831.74" y="143.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.14%)</title><rect x="847.3" y="133" width="1.7" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="850.31" y="143.5" ></text>
</g>
<g >
<title>profile (1 samples, 0.14%)</title><rect x="1186.6" y="293" width="1.7" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1189.62" y="303.5" ></text>
</g>
<g >
<title>mutex_spin_on_owner (1 samples, 0.14%)</title><rect x="226.1" y="117" width="1.7" height="15.0" fill="rgb(192,92,0)" rx="2" ry="2" />
<text  x="229.08" y="127.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.14%)</title><rect x="536.7" y="133" width="1.7" height="15.0" fill="rgb(193,93,0)" rx="2" ry="2" />
<text  x="539.70" y="143.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.14%)</title><rect x="1184.9" y="229" width="1.7" height="15.0" fill="rgb(197,97,0)" rx="2" ry="2" />
<text  x="1187.94" y="239.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (6 samples, 0.86%)</title><rect x="524.9" y="133" width="10.1" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="527.88" y="143.5" ></text>
</g>
<g >
<title>vfs_read (13 samples, 1.86%)</title><rect x="724.1" y="181" width="21.9" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="727.08" y="191.5" >v..</text>
</g>
<g >
<title>security_socket_recvmsg (1 samples, 0.14%)</title><rect x="1178.2" y="149" width="1.7" height="15.0" fill="rgb(203,103,0)" rx="2" ry="2" />
<text  x="1181.18" y="159.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.14%)</title><rect x="614.3" y="85" width="1.7" height="15.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="617.35" y="95.5" ></text>
</g>
<g >
<title>new_sync_write (76 samples, 10.87%)</title><rect x="847.3" y="181" width="128.3" height="15.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="850.31" y="191.5" >new_sync_write</text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (6 samples, 0.86%)</title><rect x="1139.4" y="181" width="10.1" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1142.36" y="191.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (1 samples, 0.14%)</title><rect x="1179.9" y="197" width="1.7" height="15.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="1182.87" y="207.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.14%)</title><rect x="1183.2" y="229" width="1.7" height="15.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="1186.25" y="239.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (1 samples, 0.14%)</title><rect x="1179.9" y="149" width="1.7" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="1182.87" y="159.5" ></text>
</g>
<g >
<title>mutex_unlock (3 samples, 0.43%)</title><rect x="557.0" y="149" width="5.0" height="15.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="559.95" y="159.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.14%)</title><rect x="702.1" y="133" width="1.7" height="15.0" fill="rgb(218,118,0)" rx="2" ry="2" />
<text  x="705.13" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="1178.2" y="229" width="1.7" height="15.0" fill="rgb(201,101,0)" rx="2" ry="2" />
<text  x="1181.18" y="239.5" ></text>
</g>
<g >
<title>security_compute_av (1 samples, 0.14%)</title><rect x="1178.2" y="85" width="1.7" height="15.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="1181.18" y="95.5" ></text>
</g>
<g >
<title>make_kgid (2 samples, 0.29%)</title><rect x="611.0" y="117" width="3.3" height="15.0" fill="rgb(252,152,0)" rx="2" ry="2" />
<text  x="613.97" y="127.5" ></text>
</g>
<g >
<title>__fdget_pos (3 samples, 0.43%)</title><rect x="746.0" y="181" width="5.1" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="749.02" y="191.5" ></text>
</g>
<g >
<title>ksys_write (2 samples, 0.29%)</title><rect x="1174.8" y="197" width="3.4" height="15.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="1177.81" y="207.5" ></text>
</g>
<g >
<title>fsnotify (5 samples, 0.72%)</title><rect x="838.9" y="165" width="8.4" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="841.87" y="175.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (12 samples, 1.72%)</title><rect x="808.5" y="133" width="20.2" height="15.0" fill="rgb(191,91,0)" rx="2" ry="2" />
<text  x="811.48" y="143.5" ></text>
</g>
<g >
<title>kthread (2 samples, 0.29%)</title><rect x="1183.2" y="261" width="3.4" height="15.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text  x="1186.25" y="271.5" ></text>
</g>
<g >
<title>ksys_read (6 samples, 0.86%)</title><rect x="187.3" y="197" width="10.1" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="190.25" y="207.5" ></text>
</g>
<g >
<title>touch_atime (5 samples, 0.72%)</title><rect x="616.0" y="133" width="8.5" height="15.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="619.04" y="143.5" ></text>
</g>
<g >
<title>dget_parent (15 samples, 2.15%)</title><rect x="803.4" y="165" width="25.3" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="806.42" y="175.5" >d..</text>
</g>
<g >
<title>sudo (1 samples, 0.14%)</title><rect x="1188.3" y="293" width="1.7" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text  x="1191.31" y="303.5" ></text>
</g>
<g >
<title>avc_has_perm (18 samples, 2.58%)</title><rect x="629.5" y="149" width="30.4" height="15.0" fill="rgb(199,99,0)" rx="2" ry="2" />
<text  x="632.54" y="159.5" >av..</text>
</g>
<g >
<title>security_file_permission (58 samples, 8.30%)</title><rect x="626.2" y="181" width="97.9" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="629.17" y="191.5" >security_fi..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.14%)</title><rect x="175.4" y="213" width="1.7" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="178.44" y="223.5" ></text>
</g>
<g >
<title>map_id_range_down (1 samples, 0.14%)</title><rect x="612.7" y="85" width="1.6" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="615.66" y="95.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.14%)</title><rect x="1181.6" y="181" width="1.6" height="15.0" fill="rgb(196,96,0)" rx="2" ry="2" />
<text  x="1184.56" y="191.5" ></text>
</g>
<g >
<title>prepare_to_wait_event (2 samples, 0.29%)</title><rect x="882.8" y="133" width="3.3" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="885.76" y="143.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.14%)</title><rect x="1181.6" y="213" width="1.6" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1184.56" y="223.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.14%)</title><rect x="847.3" y="149" width="1.7" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="850.31" y="159.5" ></text>
</g>
<g >
<title>ksys_read (337 samples, 48.21%)</title><rect x="177.1" y="213" width="568.9" height="15.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="180.12" y="223.5" >ksys_read</text>
</g>
<g >
<title>finish_task_switch.isra.0 (2 samples, 0.29%)</title><rect x="1174.8" y="101" width="3.4" height="15.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="1177.81" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (18 samples, 2.58%)</title><rect x="852.4" y="133" width="30.4" height="15.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text  x="855.37" y="143.5" >_r..</text>
</g>
<g >
<title>context_struct_compute_av (1 samples, 0.14%)</title><rect x="1178.2" y="69" width="1.7" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="1181.18" y="79.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (7 samples, 1.00%)</title><rect x="1137.7" y="213" width="11.8" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="1140.67" y="223.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.14%)</title><rect x="536.7" y="117" width="1.7" height="15.0" fill="rgb(250,150,0)" rx="2" ry="2" />
<text  x="539.70" y="127.5" ></text>
</g>
<g >
<title>selinux_file_permission (10 samples, 1.43%)</title><rect x="707.2" y="149" width="16.9" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="710.20" y="159.5" ></text>
</g>
<g >
<title>__cond_resched (4 samples, 0.57%)</title><rect x="492.8" y="117" width="6.8" height="15.0" fill="rgb(224,124,0)" rx="2" ry="2" />
<text  x="495.80" y="127.5" ></text>
</g>
<g >
<title>all (699 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(220,80,80)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.14%)</title><rect x="624.5" y="165" width="1.7" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="627.48" y="175.5" ></text>
</g>
<g >
<title>virtqueue_notify (1 samples, 0.14%)</title><rect x="1179.9" y="85" width="1.7" height="15.0" fill="rgb(218,118,0)" rx="2" ry="2" />
<text  x="1182.87" y="95.5" ></text>
</g>
<g >
<title>make_kgid (1 samples, 0.14%)</title><rect x="611.0" y="101" width="1.7" height="15.0" fill="rgb(199,99,0)" rx="2" ry="2" />
<text  x="613.97" y="111.5" ></text>
</g>
<g >
<title>security_file_permission (23 samples, 3.29%)</title><rect x="977.3" y="181" width="38.8" height="15.0" fill="rgb(207,107,0)" rx="2" ry="2" />
<text  x="980.30" y="191.5" >sec..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.14%)</title><rect x="1188.3" y="277" width="1.7" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="1191.31" y="287.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.72%)</title><rect x="178.8" y="165" width="8.5" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="181.81" y="175.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (1 samples, 0.14%)</title><rect x="1179.9" y="213" width="1.7" height="15.0" fill="rgb(249,149,0)" rx="2" ry="2" />
<text  x="1182.87" y="223.5" ></text>
</g>
<g >
<title>inode_security (1 samples, 0.14%)</title><rect x="997.6" y="133" width="1.6" height="15.0" fill="rgb(195,95,0)" rx="2" ry="2" />
<text  x="1000.55" y="143.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1 samples, 0.14%)</title><rect x="1184.9" y="181" width="1.7" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text  x="1187.94" y="191.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.29%)</title><rect x="1183.2" y="245" width="3.4" height="15.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text  x="1186.25" y="255.5" ></text>
</g>
<g >
<title>fsnotify (10 samples, 1.43%)</title><rect x="197.4" y="181" width="16.9" height="15.0" fill="rgb(194,94,0)" rx="2" ry="2" />
<text  x="200.38" y="191.5" ></text>
</g>
<g >
<title>fsnotify (5 samples, 0.72%)</title><rect x="838.9" y="149" width="8.4" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="841.87" y="159.5" ></text>
</g>
<g >
<title>lockref_put_return (1 samples, 0.14%)</title><rect x="837.2" y="133" width="1.7" height="15.0" fill="rgb(190,90,0)" rx="2" ry="2" />
<text  x="840.18" y="143.5" ></text>
</g>
<g >
<title>worker_thread (2 samples, 0.29%)</title><rect x="1179.9" y="245" width="3.3" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1182.87" y="255.5" ></text>
</g>
<g >
<title>__fdget_pos (1 samples, 0.14%)</title><rect x="177.1" y="181" width="1.7" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text  x="180.12" y="191.5" ></text>
</g>
<g >
<title>vp_notify (1 samples, 0.14%)</title><rect x="1179.9" y="69" width="1.7" height="15.0" fill="rgb(201,101,0)" rx="2" ry="2" />
<text  x="1182.87" y="79.5" ></text>
</g>
<g >
<title>new_sync_read (243 samples, 34.76%)</title><rect x="214.3" y="181" width="410.2" height="15.0" fill="rgb(190,90,0)" rx="2" ry="2" />
<text  x="217.26" y="191.5" >new_sync_read</text>
</g>
<g >
<title>selinux_file_permission (13 samples, 1.86%)</title><rect x="702.1" y="165" width="22.0" height="15.0" fill="rgb(214,114,0)" rx="2" ry="2" />
<text  x="705.13" y="175.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (578 samples, 82.69%)</title><rect x="173.7" y="229" width="975.8" height="15.0" fill="rgb(197,97,0)" rx="2" ry="2" />
<text  x="176.75" y="239.5" >do_syscall_64</text>
</g>
<g >
<title>bpf_lsm_file_permission (2 samples, 0.29%)</title><rect x="626.2" y="165" width="3.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="629.17" y="175.5" ></text>
</g>
<g >
<title>__blk_mq_do_dispatch_sched (1 samples, 0.14%)</title><rect x="1179.9" y="165" width="1.7" height="15.0" fill="rgb(198,98,0)" rx="2" ry="2" />
<text  x="1182.87" y="175.5" ></text>
</g>
<g >
<title>dput (4 samples, 0.57%)</title><rect x="830.4" y="149" width="6.8" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="833.43" y="159.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (5 samples, 0.72%)</title><rect x="227.8" y="133" width="8.4" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="230.77" y="143.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (3 samples, 0.43%)</title><rect x="605.9" y="101" width="5.1" height="15.0" fill="rgb(215,115,0)" rx="2" ry="2" />
<text  x="608.91" y="111.5" ></text>
</g>
</g>
</svg>
